# Generate data for a bell curve
x <- seq(0, 10, by = 0.1)
y <- dnorm(x, mean = 5, sd = 2)
# Create a plot
plot(x, y, type = "l", col = "blue", lwd = 2, xlab = "Time-hours", ylab = "Concentration-mg/L", main = "Predicted Tissue Concentration ")
# Add a horizontal dashed line at the threshold
threshold <- 0.14
abline(h = threshold, col = "red", lty = 2)
text(8, threshold, "Internal PoD", pos = 3, col = "red")
# Show the plot
library(deSolve)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation")
#===============
# Generate predictions
#===============
load("fitted_model.RData")
# Body weight
BW <- 0.2 #kg
#5mg/kg dose
admin.time <- seq(0.01,27*24.01,24)
dose <- rep(5,28) #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = admin.time,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
sample_time <- seq(0,28*24,0.1)
solution_5 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
pred_comps <- c( "Cblood_art", "Cliver", "Ckidneys","Clung","Cheart",
"Cspleen", "Ctestis", "Cbrain" )
solution_5 <- solution_5[solution_5$time == 28*24,pred_comps]
#20mg/kg dose
dose <- rep(20,28) #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = admin.time,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
solution_20 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
solution_20 <- solution_20[solution_20$time == 28*24,pred_comps]
##############################
### Load experimental data ###
##############################
# Load the mean values
tissues <- openxlsx::read.xlsx("Raw_Data/Cui_2008/Cui_tissues.xlsx")
tissues_5 <- tissues[tissues$Dose_mg_per_kg == 5,]
tissues_20 <- tissues[tissues$Dose_mg_per_kg == 20,]
# Gather the required data for the x-y plot
results_df_5<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_5$Dose_mg_per_kg,
"Tissue" = tissues_5$Tissue ,
"Type" = "oral",
"Observed" =tissues_5$`Concentration_ug/g`,
"Predicted" = unname(t(solution_5)))
results_df_20<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_20$Dose_mg_per_kg,
"Tissue" = tissues_20$Tissue,
"Type" = "oral",
"Observed" = tissues_20$`Concentration_ug/g`,
"Predicted" = unname(t(solution_20)))
results_df <- rbind(results_df_5, results_df_20)
write.csv(results_df,
"/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation/Validation_results/Cui_2004_results.csv",
row.names =F)
library(deSolve)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation")
#===============
# Generate predictions
#===============
load("fitted_model.RData")
# Body weight
BW <- 0.2 #kg
#5mg/kg dose
admin.time <- seq(0.01,27*24.01,24)
dose <- rep(5,28) #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = admin.time,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
sample_time <- seq(0,28*24,0.1)
solution_5_all <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
pred_comps <- c( "Aurine", "Afeces")
exp_time <- c(1,3,5,7,10,14,18,21,24,28)*24
solution_5 <- solution_5_all[solution_5_all$time %in% exp_time,pred_comps]
#20mg/kg dose
dose <- rep(20,28) #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = admin.time,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
solution_20_all <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
solution_20 <- solution_20_all[solution_20_all$time %in% exp_time,pred_comps]
##############################
### Load experimental data ###
##############################
# Load the mean values
tissues <- openxlsx::read.xlsx("Raw_Data/Cui_2010/Cui_excreta.xlsx")
#Analysis for 5mg/kg
tissues_5_daily <- tissues[tissues$Dose_mg_per_kg == 5,]
approx_times <- 1:28
# Daily excretion based on daily excretion on experimental time points
urine5_approximate <- approxfun(exp_time/24, tissues_5_daily[tissues_5_daily$Excreta  == "Urine","Mass_mg"])
total_daily_urine5 <- urine5_approximate(approx_times)
# Cumulative excretion on experimental days
urine_5_cum <- cumsum(total_daily_urine5)[c(1,3,5,7,10,14,18,21,24,28)]
# Daily excretion based on daily excretion on experimental time points
feces5_approximate <- approxfun(exp_time/24, tissues_5_daily[tissues_5_daily$Excreta  == "Feces","Mass_mg"])
total_daily_feces5 <- feces5_approximate(approx_times)
# Cumulative excretion on experimental days
feces_5_cum <- cumsum(total_daily_feces5)[c(1,3,5,7,10,14,18,21,24,28)]
tissues_5 <- tissues_5_daily
tissues_5$Mass_mg <- c(urine_5_cum,feces_5_cum)
tissues_5$Time_day <- tissues_5$Time_day*24
#Analysis for 5mg/kg
tissues_20_daily <- tissues[tissues$Dose_mg_per_kg == 20,]
approx_times <- 1:28
# Daily excretion based on daily excretion on experimental time points
urine20_approximate <- approxfun(exp_time/24, tissues_20_daily[tissues_20_daily$Excreta  == "Urine","Mass_mg"])
total_daily_urine20 <- urine20_approximate(approx_times)
# Cumulative excretion on experimental days
urine_20_cum <- cumsum(total_daily_urine20)[c(1,3,5,7,10,14,18,21,24,28)]
# Daily excretion based on daily excretion on experimental time points
feces20_approximate <- approxfun(exp_time/24, tissues_20_daily[tissues_20_daily$Excreta  == "Feces","Mass_mg"])
total_daily_feces20 <- feces20_approximate(approx_times)
# Cumulative excretion on experimental days
feces_20_cum <- cumsum(total_daily_feces20)[c(1,3,5,7,10,14,18,21,24,28)]
tissues_20 <- tissues_20_daily
tissues_20$Mass_mg <- c(urine_20_cum,feces_20_cum)
tissues_20$Time_day <- tissues_20$Time_day*24
# Gather the required data for the x-y plot
results_df_5<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_5$Dose_mg_per_kg,
"Tissue" = tissues_5$Excreta,
"Type" = "oral",
"Observed" = c(urine_5_cum, feces_5_cum),
"Predicted" = c(solution_5$Aurine,solution_5$Afeces))
results_df_20<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_20$Dose_mg_per_kg,
"Tissue" = tissues_20$Excreta,
"Type" = "oral",
"Observed" =c(urine_20_cum, feces_20_cum),
"Predicted" = c(solution_20$Aurine,solution_20$Afeces))
results_df <- rbind(results_df_5, results_df_20)
write.csv(results_df,
"/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation/Validation_results/Cui_2010_results.csv",
row.names =F)
# Defining the linetype and colour of each curve
cls <-  c("urine prediction (5mg/kg)" = "#56B4E9", "feces prediction (5mg/kg)" = "#CC79A7",
"urine prediction (20mg/kg)" = "#009E73", "feces prediction (20mg/kg)" ="#D55E00",
"urine observation (5mg/kg)" = "#56B4E9", "feces observation (5mg/kg)" = "#CC79A7",
"urine observation (20mg/kg)" = "#009E73", "feces observation (20mg/kg)" ="#D55E00")
final_plot  <- ggplot(data = solution_5_all)+
geom_line( aes(x= time, y= Aurine,color = 'urine prediction (5mg/kg)'),  size=1.5,alpha = 0.7) +
geom_line( aes(x= time, y= Afeces,color = 'feces prediction (5mg/kg)'),  size=1.5,alpha = 0.7) +
geom_line( data = solution_20_all, aes(x= time, y= Aurine,
color = 'urine prediction (20mg/kg)'),  size=1.5,alpha = 0.7) +
geom_line( data = solution_20_all, aes(x= time, y= Afeces,
color = 'feces prediction (20mg/kg)'),  size=1.5,alpha = 0.7) +
geom_point(data=tissues_5[tissues_5$Excreta == "Urine",],
aes(x= Time_day, y= Mass_mg ,color = 'urine observation (5mg/kg)'), size=4)+
geom_point(data=tissues_5[tissues_5$Excreta == "Feces",],
aes(x= Time_day, y= Mass_mg ,color = 'feces observation (5mg/kg)'), size=4)+
geom_point(data=tissues_20[tissues_20$Excreta == "Urine",],
aes(x= Time_day, y= Mass_mg ,color = 'urine observation (20mg/kg)'), size=4)+
geom_point(data=tissues_20[tissues_20$Excreta == "Feces",],
aes(x= Time_day, y= Mass_mg ,color = 'feces observation (20mg/kg)'), size=4)+
labs( y = "PFOA (mg)" ,x = "Time (hours)")+
theme(plot.title = element_text(hjust = 0.5))+
theme_light() +
scale_color_manual("Excreta", values=cls,
guide = guide_legend(override.aes =
list(shape = c(16,16,  NA, NA, 16, 16,  NA, NA),
linetype = c(0, 0, 1,1, 0,0, 1,1))))+
theme(  legend.justification = "top" ,
legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
plot.margin=grid::unit(c(0.25,0.25,0.25,0.25), "cm"))
# Save the plot with dynamically adjusted dimensions
ggsave("excreta_plot.png", plot = final_plot,
device = 'png', dpi = 300,
width = 11,
height = 7,
units = "in")
library(ggplot2)
# Load the mean values
tissues <- openxlsx::read.xlsx("Raw_Data/Kim_2016/PFOA_male-tissues_Kim_2016.xlsx")
tissues_iv <- tissues[1:5,]
tissues_iv$Concentration_nanog_per_g <- tissues_iv$Concentration_nanog_per_g/1000 #convert ng/g to mg/L
tissues_oral <- tissues[6:10,]
tissues_oral$Concentration_nanog_per_g <- tissues_oral$Concentration_nanog_per_g/1000 #convert ng/g to mg/L
# Gather the required data for the x-y plot
results_df_iv<- data.frame("Study" = "Kim", "Dose" =  tissues_iv$Dose_mg_per_kg,
"Tissue" = tissues_iv$Tissue,
"Type" = "iv",
"Observed" = tissues_iv$Concentration_nanog_per_g,
"Predicted" = unname(t(solution_iv)))
results_df_oral<- data.frame("Study" = "Kim", "Dose" =  tissues_oral$Dose_mg_per_kg,
"Tissue" = tissues_oral$Tissue,
"Type" = "oral",
"Observed" = tissues_oral$Concentration_nanog_per_g,
"Predicted" = unname(t(solution_oral)))
results_df <- rbind(results_df_iv, results_df_oral)
write.csv(results_df,
"/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation/Validation_results/Kim_results84.csv",
row.names =F)
library(deSolve)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation")
#===============
# Generate predictions
#===============
load("fitted_model.RData")
# Body weight Kudo 2007
BW <- 0.29 #kg
#low dose
dose <- 0.041 #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "iv", "admin.time" = 0.01,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
sample_time <- seq(0,2,0.01)
solution_low <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
pred_comps <- c( "Cplasma_ven", "Cliver", "Ckidneys","Cintestine",
"Ctestis", "Cspleen", "Cheart", "Clung", "Cbrain","Cstomach",  "Ccarcass")
solution_low <- solution_low[solution_low$time ==2,pred_comps]
#High dose
#low dose
dose <- 16.56 #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "iv", "admin.time" = 0.01,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
solution_high <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
solution_high <- solution_high[solution_high$time ==2,pred_comps]
##############################
### Load experimental data ###
##############################
# Load the mean values
tissues_low <- openxlsx::read.xlsx("Raw_Data/Kudo_2007/IV_male_rats_tissues_low_kudo_2007.xlsx")
tissues_high <-  openxlsx::read.xlsx("Raw_Data/Kudo_2007/IV_male_rats_tissues_high_kudo_2007.xlsx")
tissues_names <-  c("Serum" , "Liver", "Kidney", "Intestine", "Testis", "Spleen",
"Heart",  "Lung", "Brain","Stomach", "Carcass")
tissues_low <- tissues_low[tissues_low$Tissue %in% tissues_names,]
tissues_high <- tissues_high[tissues_high$Tissue %in% tissues_names,]
# Gather the required data for the x-y plot
results_df_low <- data.frame("Study" = "Kudo", "Dose" =  tissues_low$Dose_mg_per_kg,
"Tissue" = tissues_low$Tissue,
"Type" = "iv",
"Observed" = tissues_low$`Concentration_microg_per_g_organ)`,
"Predicted" = unname(t(solution_low)))
results_df_high <- data.frame("Study" = "Kudo", "Dose" =  tissues_high$Dose_mg_per_kg,
"Tissue" = tissues_low$Tissue,
"Type" = "iv",
"Observed" = tissues_high$`Concentration_microg_per_g_organ)`,
"Predicted" = unname(t(solution_high)))
results_df <- rbind(results_df_low, results_df_high)
write.csv(results_df,
"/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation/Validation_results/Kudo_results.csv",
row.names =F)
library(ggplot2)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation/Validation_results")
column_names <- c("Study",	"Dose",	"Tissue",	"Type",	"Observed",	"Predicted")
# Load Results
Cui_results <- read.csv("Cui_2008_results.csv", header = T)
Cui_low <- Cui_results[Cui_results$Dose == 5, ]
Cui_low$Experiment <- "Cui | 5mg/kg | oral"
Cui_high <- Cui_results[Cui_results$Dose == 20, ]
Cui_high$Experiment <- "Cui | 20mg/kg | oral"
Kudo_results <- read.csv("Kudo_results.csv", header = T)
Kudo_low <- Kudo_results[Kudo_results$Dose == 0.041, ]
Kudo_low$Experiment <-  "Kudo | 0.04mg/kg | iv"
Kudo_high <- Kudo_results[Kudo_results$Dose == 16.560, ]
Kudo_high$Experiment <-  "Kudo | 16mg/kg | iv"
Kim_results <- read.csv("Kim_results.csv", header = T)
Kim_iv <- Kim_results[Kim_results$Type == "iv",]
Kim_iv$Experiment <-  "Kim | 1mg/kg | iv"
Kim_oral <- Kim_results[Kim_results$Type == "oral",]
Kim_oral$Experiment <-  "Kim | 1mg/kg | oral"
Tissue_markers <-  c(0:10,14)
names(Tissue_markers) <- c( "Lung",   "Spleen",  "Liver",   "Kidney", "Plasma", "Heart",
"Brain","Testis", "Stomach", "Intestines", "Carcass")
Experiment <- scales::hue_pal()(6)
Experiment <- c("#009E73", "#E69F00", "#56B4E9", "#CC79A7", "#000000", "#D55E00")
names(Experiment) <- unique(c(Cui_low$Experiment, Cui_high$Experiment,
Kudo_low$Experiment,   Kudo_high$Experiment,
Kim_iv$Experiment, Kim_oral$Experiment))
scatter_plot <- ggplot()+
geom_abline(intercept = log10(1), slope = 1, linetype = "dashed", color = "black", linewidth = 1.5,alpha = 0.7) +  # Identity line in log10 scale
geom_point(data = Cui_low, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Cui_high, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kudo_low, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kudo_high, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kim_iv, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kim_oral, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
scale_y_log10()+
scale_x_log10()+
scale_color_manual(values = Experiment)+
theme(legend.spacing.y = unit(1, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))+
scale_shape_manual(values = Tissue_markers)+
theme_light()+
labs(y = "Predicted PFOA (mg/L tissue)",
x = "Observed PFOA ( mg/L tissue)")+
theme(plot.title = element_text(hjust = 0.5),
legend.key.size = unit(0.75, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12,  hjust = 0),
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
)
print(scatter_plot)
ggsave("validation_plot_PFOA.png", scatter_plot, width = 11, height = 7, units = "in", dpi = 300)
library(ggplot2)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation/Validation_results")
column_names <- c("Study",	"Dose",	"Tissue",	"Type",	"Observed",	"Predicted")
# Load Results
Cui_results <- read.csv("Cui_2008_results.csv", header = T)
Cui_low <- Cui_results[Cui_results$Dose == 5, ]
Cui_low$Experiment <- "Cui | 5mg/kg | oral"
Cui_high <- Cui_results[Cui_results$Dose == 20, ]
Cui_high$Experiment <- "Cui | 20mg/kg | oral"
Cui_results <- read.csv("Cui_2008_results.csv", header = T)
library(deSolve)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation")
#===============
# Generate predictions
#===============
load("fitted_model.RData")
# Body weight
BW <- 0.2 #kg
#5mg/kg dose
admin.time <- seq(0.01,27*24.01,24)
dose <- rep(5,28) #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = admin.time,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
sample_time <- seq(0,28*24,0.1)
solution_5 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
pred_comps <- c( "Cblood_art", "Cliver", "Ckidneys","Clung","Cheart",
"Cspleen", "Ctestis", "Cbrain" )
solution_5 <- solution_5[solution_5$time == 28*24,pred_comps]
#20mg/kg dose
dose <- rep(20,28) #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = admin.time,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
solution_20 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
solution_20 <- solution_20[solution_20$time == 28*24,pred_comps]
##############################
### Load experimental data ###
##############################
# Load the mean values
tissues <- openxlsx::read.xlsx("Raw_Data/Cui_2008/Cui_tissues.xlsx")
tissues_5 <- tissues[tissues$Dose_mg_per_kg == 5,]
tissues_20 <- tissues[tissues$Dose_mg_per_kg == 20,]
# Gather the required data for the x-y plot
results_df_5<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_5$Dose_mg_per_kg,
"Tissue" = tissues_5$Tissue ,
"Type" = "oral",
"Observed" =tissues_5$`Concentration_ug/g`,
"Predicted" = unname(t(solution_5)))
results_df_20<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_20$Dose_mg_per_kg,
"Tissue" = tissues_20$Tissue,
"Type" = "oral",
"Observed" = tissues_20$`Concentration_ug/g`,
"Predicted" = unname(t(solution_20)))
results_df <- rbind(results_df_5, results_df_20)
write.csv(results_df,
"/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation/Validation_results/Cui_2008_results.csv",
row.names =F)
library(deSolve)
library(ggplot2)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation")
#===============
# Generate predictions
#===============
load("fitted_model.RData")
# Body weight Kim 2016
BW <- 0.25#kg, from Kim et al. 2018
#iv dose
dose <- 1 #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "iv", "admin.time" = 0.01,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
sample_time <- seq(0,12*24,0.1)
solution_iv <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
pred_comps <- c( "Cheart", "Clung", "Ckidneys", "Cliver",  "Cspleen")
solution_iv <- solution_iv[solution_iv$time ==12*24,pred_comps]
#oral dose
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = 0.01,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
sample_time <- seq(0,12*24,0.1)
solution_oral <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
pred_comps <- c( "Cheart", "Clung", "Ckidneys", "Cliver",  "Cspleen")
solution_oral <- solution_oral[solution_oral$time ==12*24,pred_comps]
##############################
### Load experimental data ###
##############################
# Load the mean values
tissues <- openxlsx::read.xlsx("Raw_Data/Kim_2016/PFOA_male-tissues_Kim_2016.xlsx")
tissues_iv <- tissues[1:5,]
tissues_iv$Concentration_nanog_per_g <- tissues_iv$Concentration_nanog_per_g/1000 #convert ng/g to mg/L
tissues_oral <- tissues[6:10,]
tissues_oral$Concentration_nanog_per_g <- tissues_oral$Concentration_nanog_per_g/1000 #convert ng/g to mg/L
# Gather the required data for the x-y plot
results_df_iv<- data.frame("Study" = "Kim", "Dose" =  tissues_iv$Dose_mg_per_kg,
"Tissue" = tissues_iv$Tissue,
"Type" = "iv",
"Observed" = tissues_iv$Concentration_nanog_per_g,
"Predicted" = unname(t(solution_iv)))
results_df_oral<- data.frame("Study" = "Kim", "Dose" =  tissues_oral$Dose_mg_per_kg,
"Tissue" = tissues_oral$Tissue,
"Type" = "oral",
"Observed" = tissues_oral$Concentration_nanog_per_g,
"Predicted" = unname(t(solution_oral)))
results_df <- rbind(results_df_iv, results_df_oral)
write.csv(results_df,
"/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation/Validation_results/Kim_results.csv",
row.names =F)
library(ggplot2)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation/Validation_results")
column_names <- c("Study",	"Dose",	"Tissue",	"Type",	"Observed",	"Predicted")
# Load Results
'Cui_results <- read.csv("Cui_2008_results.csv", header = T)
'Cui_low <- Cui_results[Cui_results$Dose == 5, ]
Cui_low$Experiment <- "Cui | 5mg/kg | oral"
Cui_high <- Cui_results[Cui_results$Dose == 20, ]
Cui_high$Experiment <- "Cui | 20mg/kg | oral"
Kudo_results <- read.csv("Kudo_results.csv", header = T)
Kudo_low <- Kudo_results[Kudo_results$Dose == 0.041, ]
Kudo_low$Experiment <-  "Kudo | 0.04mg/kg | iv"
Kudo_high <- Kudo_results[Kudo_results$Dose == 16.560, ]
Kudo_high$Experiment <-  "Kudo | 16mg/kg | iv"
Kim_results <- read.csv("Kim_results.csv", header = T)
Kim_iv <- Kim_results[Kim_results$Type == "iv",]
Kim_iv$Experiment <-  "Kim | 1mg/kg | iv"
Kim_oral <- Kim_results[Kim_results$Type == "oral",]
Kim_oral$Experiment <-  "Kim | 1mg/kg | oral"
Tissue_markers <-  c(0:10,14)
names(Tissue_markers) <- c( "Lung",   "Spleen",  "Liver",   "Kidney", "Plasma", "Heart",
"Brain","Testis", "Stomach", "Intestines", "Carcass")
Experiment <- scales::hue_pal()(6)
Experiment <- c("#009E73", "#E69F00", "#56B4E9", "#CC79A7", "#000000", "#D55E00")
names(Experiment) <- unique(c(Cui_low$Experiment, Cui_high$Experiment,
Kudo_low$Experiment,   Kudo_high$Experiment,
Kim_iv$Experiment, Kim_oral$Experiment))
scatter_plot <- ggplot()+
geom_abline(intercept = log10(1), slope = 1, linetype = "dashed", color = "black", linewidth = 1.5,alpha = 0.7) +  # Identity line in log10 scale
geom_point(data = Cui_low, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Cui_high, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kudo_low, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kudo_high, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kim_iv, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kim_oral, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
scale_y_log10()+
scale_x_log10()+
scale_color_manual(values = Experiment)+
theme(legend.spacing.y = unit(1, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))+
scale_shape_manual(values = Tissue_markers)+
theme_light()+
labs(y = "Predicted PFOA (mg/L tissue)",
x = "Observed PFOA ( mg/L tissue)")+
theme(plot.title = element_text(hjust = 0.5),
legend.key.size = unit(0.75, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12,  hjust = 0),
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
)
print(scatter_plot)
ggsave("validation_plot_PFOA.png", scatter_plot, width = 11, height = 7, units = "in", dpi = 300)
