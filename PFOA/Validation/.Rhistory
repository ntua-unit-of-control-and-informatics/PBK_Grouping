# Load the mean values
tissues <- openxlsx::read.xlsx("Raw_Data/Cui_2008/Cui_tissues.xlsx")
tissues_5 <- tissues[tissues$Dose_mg_per_kg == 5,]
tissues_20 <- tissues[tissues$Dose_mg_per_kg == 20,]
# Load the mean values
tissues <- openxlsx::read.xlsx("Raw_Data/Cui_2008/Cui_tissues.xlsx")
tissues_5 <- tissues[tissues$Dose_mg_per_kg == 5,]
tissues_20 <- tissues[tissues$Dose_mg_per_kg == 20,]
# Gather the required data for the x-y plot
results_df_5<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_5$Dose_mg_per_kg,
"Tissue" = tissues_5$Tissue ,
"Type" = "oral",
"Observed" =tissues_5,
"Predicted" = unname(t(solution_5)))
results_df_20<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_20$Dose_mg_per_kg,
"Tissue" = tissues_20$Tissue,
"Type" = "oral",
"Observed" = tissues_20,
"Predicted" = unname(t(solution_20)))
results_df <- rbind(results_df_5, results_df_20)
results_df
results_df_5
unname(t(solution_5))
results_df_5<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_5$Dose_mg_per_kg,
"Tissue" = tissues_5$Tissue ,
"Type" = "oral",
"Observed" =tissues_5$Tissue,
"Predicted" = unname(t(solution_5)))
results_df_20<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_20$Dose_mg_per_kg,
"Tissue" = tissues_20$Tissue,
"Type" = "oral",
"Observed" = tissues_20$Tissue,
"Predicted" = unname(t(solution_20)))
results_df <- rbind(results_df_5, results_df_20)
results_df
# Gather the required data for the x-y plot
results_df_5<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_5$Dose_mg_per_kg,
"Tissue" = tissues_5$Tissue ,
"Type" = "oral",
"Observed" =tissues_5$`Concentration_ug/g`,
"Predicted" = unname(t(solution_5)))
results_df_20<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_20$Dose_mg_per_kg,
"Tissue" = tissues_20$Tissue,
"Type" = "oral",
"Observed" = tissues_20$`Concentration_ug/g`,
"Predicted" = unname(t(solution_20)))
results_df <- rbind(results_df_5, results_df_20)
results_df
library(deSolve)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation")
#===============
# Generate predictions
#===============
load("model_params.RData")
# Body weight Kim 2016
BW <- 0.2 #kg
#5mg/kg dose
admin.time <- seq(0.01,27*24.01,24)
dose <- rep(5,28) #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = admin.time,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
sample_time <- seq(0,28*24,0.1)
solution_5 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
pred_comps <- c( "Cblood", "Cliver", "Ckidneys","Clung","Cheart",
"Cspleen", "Ctestis", "Cbrain" )
solution_5 <- solution_5[solution_5$time == 28*24,pred_comps]
#20mg/kg dose
dose <- rep(20,28) #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = admin.time,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
solution_20 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
solution_20 <- solution_20[solution_20$time == 28*24,pred_comps]
##############################
### Load experimental data ###
##############################
# Load the mean values
tissues <- openxlsx::read.xlsx("Raw_Data/Cui_2008/Cui_tissues.xlsx")
tissues_5 <- tissues[tissues$Dose_mg_per_kg == 5,]
tissues_20 <- tissues[tissues$Dose_mg_per_kg == 20,]
# Gather the required data for the x-y plot
results_df_5<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_5$Dose_mg_per_kg,
"Tissue" = tissues_5$Tissue ,
"Type" = "oral",
"Observed" =tissues_5$`Concentration_ug/g`,
"Predicted" = unname(t(solution_5)))
results_df_20<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_20$Dose_mg_per_kg,
"Tissue" = tissues_20$Tissue,
"Type" = "oral",
"Observed" = tissues_20$`Concentration_ug/g`,
"Predicted" = unname(t(solution_20)))
results_df <- rbind(results_df_5, results_df_20)
write.csv(results_df,
"/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation/Validation_results/Cui_2010_results.csv",
row.names =F)
library(deSolve)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation")
#===============
# Generate predictions
#===============
load("model_params.RData")
# Body weight Kim 2016
BW <- 0.2 #kg
#5mg/kg dose
admin.time <- seq(0.01,27*24.01,24)
dose <- rep(5,28) #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = admin.time,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
sample_time <- seq(0,28*24,0.1)
solution_5 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
pred_comps <- c( "Cblood", "Cliver", "Ckidneys","Clung","Cheart",
"Cspleen", "Ctestis", "Cbrain" )
solution_5 <- solution_5[solution_5$time == 28*24,pred_comps]
#20mg/kg dose
dose <- rep(20,28) #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = admin.time,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
solution_20 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
solution_20 <- solution_20[solution_20$time == 28*24,pred_comps]
##############################
### Load experimental data ###
##############################
# Load the mean values
tissues <- openxlsx::read.xlsx("Raw_Data/Cui_2008/Cui_tissues.xlsx")
tissues_5 <- tissues[tissues$Dose_mg_per_kg == 5,]
tissues_20 <- tissues[tissues$Dose_mg_per_kg == 20,]
# Gather the required data for the x-y plot
results_df_5<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_5$Dose_mg_per_kg,
"Tissue" = tissues_5$Tissue ,
"Type" = "oral",
"Observed" =tissues_5$`Concentration_ug/g`,
"Predicted" = unname(t(solution_5)))
results_df_20<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_20$Dose_mg_per_kg,
"Tissue" = tissues_20$Tissue,
"Type" = "oral",
"Observed" = tissues_20$`Concentration_ug/g`,
"Predicted" = unname(t(solution_20)))
results_df <- rbind(results_df_5, results_df_20)
write.csv(results_df,
"/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation/Validation_results/Cui_2008_results.csv",
row.names =F)
results_df
library(deSolve)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation")
#===============
# Generate predictions
#===============
load("model_params.RData")
ode.func <- function(time, inits, params, custom.func){
with(as.list(c(inits,params)),{
Crest = Arest/Vrest #concentration in rest of body (mg/L)
CVrest = Crest/Prest	#concentration in venous blood leaving the rest of the body (mg/L)
Ckidney_blood = Akidney_blood/Vkidneyb	#concentration in kidney blodd (mg/L)
CVkidney = Ckidney_blood #/Pkidney	#concentration in venous blood leaving kidney (mg/L)
CPTC = APTC/VPTC	#concentration in PTC (mg/L)
Cfil = Afil/Vfil	#concentration in filtrate (mg/L)
Cliver = Aliver/Vliver	#concentration in the liver (mg/L)
CVliver = Cliver/Pliver	#concentration in the venous blood leaving the liver (mg/L)
Cgonads = Agonads/Vgonads	#concentration in the gonads (mg/L)
CVgonads = Cgonads/Pgonads	#concentration in the venous blood leaving the gonads (mg/L)
Cspleen = Aspleen/Vspleen	#concentration in the spleen (mg/L)
CVspleen = Cspleen/Pspleen	#concentration in the venous blood leaving the spleen (mg/L)
Cheart = Aheart/Vheart	#concentration in the heart (mg/L)
CVheart = Cheart/Pheart	#concentration in the venous blood leaving the heart (mg/L)
Clung = Alung/Vlung	#concentration in the lung (mg/L)
CVlung = Clung/Plung	#concentration in the venous blood leaving the lung (mg/L)
Cbrain = Abrain/Vbrain	#concentration in the brain (mg/L)
CVbrain = Cbrain/Pbrain	#concentration in the venous blood leaving the brain (mg/L)
Cintestine = Aintestine/Vintestine	#concentration in the liver (mg/L)
CVintestine = Cintestine/Pintestine	#concentration in the venous blood leaving the liver (mg/L)
Cstomach = Astomach/Vstomach	#concentration in the liver (mg/L)
CVstomach = Cstomach/Pstomach	#concentration in the venous blood leaving the liver (mg/L)
Cart_free = Aart_free/Vart_plasma		#concentration in arterial  plasma (mg)
Cart = Cart_free/Free	#concentration of total PFOA in arterial plasma (mg/L)
Cven_free = Aven_free/Vven_plasma		#concentration in venous plasma (mg)
Cven = Cven_free/Free	#concentration of total PFOA in venous plasma (mg/L)
# Rest of Body (Tis)
dArest = Qrest*(Cart-CVrest)*Free	#rate of change in rest of body (mg/h)
dAgonads = Qgonads*(Cart-CVgonads)*Free	#rate of change in rest of body (mg/h)
dAspleen = Qspleen*(Cart-CVspleen)*Free	#rate of change in rest of body (mg/h)
dAheart = Qheart*(Cart-CVheart)*Free	#rate of change in rest of body (mg/h)
dAlung = Qlung*(Cven-CVlung)*Free	#rate of change in rest of body (mg/h)
dAbrain = Qbrain*(Cart-CVbrain)*Free	#rate of change in rest of body (mg/h)
#Kidney
#Kidney Blood (Kb)
dAdif <- kdif*(Ckidney_blood - CPTC)	#rate of diffusion from into the PTC (mg/hr)
dA_baso <- (Vmax_baso*Ckidney_blood)/(Km_baso + Ckidney_blood)
dAkidney_blood <- Qkidney*(Cart-CVkidney)*Free - Cart*GFR*Free- dAdif - dA_baso  #rate of change in kidney blood (mg/h).
dACl <- Cven*GFR*Free	#rate of clearance via glormerular filtration (mg/h)
#Proximal Tubule Cells (PTC)
dAefflux <- kefflux*APTC
dA_apical <- (Vmax_apical*Cfil)/(Km_apical + Cfil)
dAPTC <-  dAdif + dA_apical + dA_baso - dAefflux #rate of change in PTC(mg/h)
#Filtrate (Fil)
dAfil = Cart*GFR*Free - dA_apical - Afil*kurine	#rate of change in filtrate (mg/h)
#Urinary elimination
dAurine = kurine*Afil	#rate of change in urine (mg/h)
#GI Tract (Absorption site of oral dose)
#Stomach
dAstomach_lumen=  - k0*Astomach_lumen - GE*Astomach_lumen 	#rate of change in the stomach lumen (mg/h)
dAstomach = k0*Astomach_lumen + Qstomach*(Cart-CVstomach)*Free	#rate change in the stomach (mg/h)
#Small Intestine
dAintestine_lumen = GE*Astomach_lumen - kabs*Aintestine_lumen - kunabs*Aintestine_lumen	#rate of change in the  intestine lumen (mg/hr)
dAintestine = kabs*Aintestine_lumen +  Qintestine*(Cart-CVintestine)*Free	#rate change in the  intestine (mg/hr)
#Feces compartment
dAfeces = kbile*Aliver + kunabs*Aintestine_lumen #rate of change in the feces compartment (mg/h)
#Liver
dAliver = QL_hepatic_artery*Cart*Free - kbile*Aliver + kabs*Aintestine_lumen + k0*Astomach_lumen +
Qspleen*CVspleen*Free +Qstomach*CVstomach*Free+ Qintestine*CVintestine*Free-
(QL_hepatic_artery+Qspleen+Qstomach+Qintestine)*CVliver*Free#rate of change in the liver (mg/h)
dAbile = kbile*Aliver
#Venous Plasma compartment
dAven_free = Qrest*CVrest*Free + Qgonads*CVgonads*Free +  Qheart*CVheart*Free + Qbrain*CVbrain*Free +
(Qkidney*CVkidney*Free) + ((QL_hepatic_artery+Qspleen+Qstomach+Qintestine) *CVliver*Free) -
(Qlung*Cven*Free)+ dAefflux #rate of change in the plasma (mg/h)
#Arterial Plasma compartment
dAart_free =  Qlung*CVlung*Free - Cart*Free*(Qrest+Qgonads+Qspleen+Qheart+
Qbrain+Qkidney+Qstomach+Qintestine+QL_hepatic_artery)
#Mass Balance Check
Atissue = Aart_free +Aven_free+ Arest + Akidney_blood + Afil + APTC + Aliver +
Astomach + Astomach_lumen + Aintestine+ Aintestine_lumen+
Agonads + Aspleen + Aheart + Alung + Abrain #sum of mass in all compartments (mg)
Aloss = Aurine + Afeces #sum of mass lost through urinary and fecal excretion (mg)
Atotal = Atissue + Aloss 	#total mass; should equal total dose
list(c("dArest" = dArest, "dAgonads" = dAgonads, "dAspleen" = dAspleen, "dAheart" = dAheart,
"dAlung" = dAlung, "dAbrain" = dAbrain,
"dAdif" = dAdif, "dA_baso" = dA_baso, "dAkidney_blood" = dAkidney_blood,
"dACl" = dACl, "dAefflux" = dAefflux,
"dA_apical" = dA_apical, "dAPTC" = dAPTC, "dAfil" = dAfil,
"dAurine" = dAurine, "dAstomach_lumen" =dAstomach_lumen,
"dAstomach" = dAstomach, "dAintestine_lumen" = dAintestine_lumen,
"dAintestine" = dAintestine, "dAfeces" = dAfeces,
"dAliver" = dAliver, "dAbile" = dAbile, "dAven_free" = dAven_free,
"dAart_free" = dAart_free),
"Atissue" = Atissue, "Aloss" = Aloss, "Atotal" = Atotal, "Crest" =Crest,
"CVrest" = CVrest,
"CVkidney" = CVkidney, "CPTC" = CPTC,
"Cfil" = Cfil,  "CVliver" = CVliver, "Cart_free" = Cart_free,
"Cart" = Cart,
"Cplasma_ven" = Aven_free/Vven_plasma/Free,
"Cliver" = Aliver /Vliver,
"Ckidneys" = (APTC+ Akidney_blood)/Vkidney,
"Cbrain" = Abrain /Vbrain,
"Cintestine" =  Aintestine /Vintestine,
"Ctestis" = Agonads/Vgonads,
"Cspleen" = Aspleen /Vspleen,
"Cheart" = Aheart /Vheart,
"Clung" = Alung /Vlung,
"Cstomach" = Astomach /Vstomach,
"Ccarcass" = Arest /Vrest,
"Cblood_art" = (Aart_free/Vart_plasma/Free)/(1-0.46) # from plasma to blood by accounting for hematocrit
)
})
}
save.image("model_params.RData")
library(deSolve)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation")
#===============
# Generate predictions
#===============
load("model_params.RData")
# Body weight Kim 2016
BW <- 0.2 #kg
#5mg/kg dose
admin.time <- seq(0.01,27*24.01,24)
dose <- rep(5,28) #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = admin.time,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
sample_time <- seq(0,28*24,0.1)
solution_5 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
pred_comps <- c( "Cblood", "Cliver", "Ckidneys","Clung","Cheart",
"Cspleen", "Ctestis", "Cbrain" )
solution_5 <- solution_5[solution_5$time == 28*24,pred_comps]
#20mg/kg dose
dose <- rep(20,28) #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = admin.time,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
solution_20 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
solution_20 <- solution_20[solution_20$time == 28*24,pred_comps]
##############################
### Load experimental data ###
##############################
# Load the mean values
tissues <- openxlsx::read.xlsx("Raw_Data/Cui_2008/Cui_tissues.xlsx")
tissues_5 <- tissues[tissues$Dose_mg_per_kg == 5,]
tissues_20 <- tissues[tissues$Dose_mg_per_kg == 20,]
# Gather the required data for the x-y plot
results_df_5<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_5$Dose_mg_per_kg,
"Tissue" = tissues_5$Tissue ,
"Type" = "oral",
"Observed" =tissues_5$`Concentration_ug/g`,
"Predicted" = unname(t(solution_5)))
results_df_20<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_20$Dose_mg_per_kg,
"Tissue" = tissues_20$Tissue,
"Type" = "oral",
"Observed" = tissues_20$`Concentration_ug/g`,
"Predicted" = unname(t(solution_20)))
results_df <- rbind(results_df_5, results_df_20)
write.csv(results_df,
"/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation/Validation_results/Cui_2008_results.csv",
row.names =F)
results_df
results_df
results_df
solution_5
library(deSolve)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation")
#===============
# Generate predictions
#===============
load("model_params.RData")
ode.func <- function(time, inits, params, custom.func){
with(as.list(c(inits,params)),{
Crest = Arest/Vrest #concentration in rest of body (mg/L)
CVrest = Crest/Prest	#concentration in venous blood leaving the rest of the body (mg/L)
Ckidney_blood = Akidney_blood/Vkidneyb	#concentration in kidney blodd (mg/L)
CVkidney = Ckidney_blood #/Pkidney	#concentration in venous blood leaving kidney (mg/L)
CPTC = APTC/VPTC	#concentration in PTC (mg/L)
Cfil = Afil/Vfil	#concentration in filtrate (mg/L)
Cliver = Aliver/Vliver	#concentration in the liver (mg/L)
CVliver = Cliver/Pliver	#concentration in the venous blood leaving the liver (mg/L)
Cgonads = Agonads/Vgonads	#concentration in the gonads (mg/L)
CVgonads = Cgonads/Pgonads	#concentration in the venous blood leaving the gonads (mg/L)
Cspleen = Aspleen/Vspleen	#concentration in the spleen (mg/L)
CVspleen = Cspleen/Pspleen	#concentration in the venous blood leaving the spleen (mg/L)
Cheart = Aheart/Vheart	#concentration in the heart (mg/L)
CVheart = Cheart/Pheart	#concentration in the venous blood leaving the heart (mg/L)
Clung = Alung/Vlung	#concentration in the lung (mg/L)
CVlung = Clung/Plung	#concentration in the venous blood leaving the lung (mg/L)
Cbrain = Abrain/Vbrain	#concentration in the brain (mg/L)
CVbrain = Cbrain/Pbrain	#concentration in the venous blood leaving the brain (mg/L)
Cintestine = Aintestine/Vintestine	#concentration in the liver (mg/L)
CVintestine = Cintestine/Pintestine	#concentration in the venous blood leaving the liver (mg/L)
Cstomach = Astomach/Vstomach	#concentration in the liver (mg/L)
CVstomach = Cstomach/Pstomach	#concentration in the venous blood leaving the liver (mg/L)
Cart_free = Aart_free/Vart_plasma		#concentration in arterial  plasma (mg)
Cart = Cart_free/Free	#concentration of total PFOA in arterial plasma (mg/L)
Cven_free = Aven_free/Vven_plasma		#concentration in venous plasma (mg)
Cven = Cven_free/Free	#concentration of total PFOA in venous plasma (mg/L)
# Rest of Body (Tis)
dArest = Qrest*(Cart-CVrest)*Free	#rate of change in rest of body (mg/h)
dAgonads = Qgonads*(Cart-CVgonads)*Free	#rate of change in rest of body (mg/h)
dAspleen = Qspleen*(Cart-CVspleen)*Free	#rate of change in rest of body (mg/h)
dAheart = Qheart*(Cart-CVheart)*Free	#rate of change in rest of body (mg/h)
dAlung = Qlung*(Cven-CVlung)*Free	#rate of change in rest of body (mg/h)
dAbrain = Qbrain*(Cart-CVbrain)*Free	#rate of change in rest of body (mg/h)
#Kidney
#Kidney Blood (Kb)
dAdif <- kdif*(Ckidney_blood - CPTC)	#rate of diffusion from into the PTC (mg/hr)
dA_baso <- (Vmax_baso*Ckidney_blood)/(Km_baso + Ckidney_blood)
dAkidney_blood <- Qkidney*(Cart-CVkidney)*Free - Cart*GFR*Free- dAdif - dA_baso  #rate of change in kidney blood (mg/h).
dACl <- Cven*GFR*Free	#rate of clearance via glormerular filtration (mg/h)
#Proximal Tubule Cells (PTC)
dAefflux <- kefflux*APTC
dA_apical <- (Vmax_apical*Cfil)/(Km_apical + Cfil)
dAPTC <-  dAdif + dA_apical + dA_baso - dAefflux #rate of change in PTC(mg/h)
#Filtrate (Fil)
dAfil = Cart*GFR*Free - dA_apical - Afil*kurine	#rate of change in filtrate (mg/h)
#Urinary elimination
dAurine = kurine*Afil	#rate of change in urine (mg/h)
#GI Tract (Absorption site of oral dose)
#Stomach
dAstomach_lumen=  - k0*Astomach_lumen - GE*Astomach_lumen 	#rate of change in the stomach lumen (mg/h)
dAstomach = k0*Astomach_lumen + Qstomach*(Cart-CVstomach)*Free	#rate change in the stomach (mg/h)
#Small Intestine
dAintestine_lumen = GE*Astomach_lumen - kabs*Aintestine_lumen - kunabs*Aintestine_lumen	#rate of change in the  intestine lumen (mg/hr)
dAintestine = kabs*Aintestine_lumen +  Qintestine*(Cart-CVintestine)*Free	#rate change in the  intestine (mg/hr)
#Feces compartment
dAfeces = kbile*Aliver + kunabs*Aintestine_lumen #rate of change in the feces compartment (mg/h)
#Liver
dAliver = QL_hepatic_artery*Cart*Free - kbile*Aliver + kabs*Aintestine_lumen + k0*Astomach_lumen +
Qspleen*CVspleen*Free +Qstomach*CVstomach*Free+ Qintestine*CVintestine*Free-
(QL_hepatic_artery+Qspleen+Qstomach+Qintestine)*CVliver*Free#rate of change in the liver (mg/h)
dAbile = kbile*Aliver
#Venous Plasma compartment
dAven_free = Qrest*CVrest*Free + Qgonads*CVgonads*Free +  Qheart*CVheart*Free + Qbrain*CVbrain*Free +
(Qkidney*CVkidney*Free) + ((QL_hepatic_artery+Qspleen+Qstomach+Qintestine) *CVliver*Free) -
(Qlung*Cven*Free)+ dAefflux #rate of change in the plasma (mg/h)
#Arterial Plasma compartment
dAart_free =  Qlung*CVlung*Free - Cart*Free*(Qrest+Qgonads+Qspleen+Qheart+
Qbrain+Qkidney+Qstomach+Qintestine+QL_hepatic_artery)
#Mass Balance Check
Atissue = Aart_free +Aven_free+ Arest + Akidney_blood + Afil + APTC + Aliver +
Astomach + Astomach_lumen + Aintestine+ Aintestine_lumen+
Agonads + Aspleen + Aheart + Alung + Abrain #sum of mass in all compartments (mg)
Aloss = Aurine + Afeces #sum of mass lost through urinary and fecal excretion (mg)
Atotal = Atissue + Aloss 	#total mass; should equal total dose
list(c("dArest" = dArest, "dAgonads" = dAgonads, "dAspleen" = dAspleen, "dAheart" = dAheart,
"dAlung" = dAlung, "dAbrain" = dAbrain,
"dAdif" = dAdif, "dA_baso" = dA_baso, "dAkidney_blood" = dAkidney_blood,
"dACl" = dACl, "dAefflux" = dAefflux,
"dA_apical" = dA_apical, "dAPTC" = dAPTC, "dAfil" = dAfil,
"dAurine" = dAurine, "dAstomach_lumen" =dAstomach_lumen,
"dAstomach" = dAstomach, "dAintestine_lumen" = dAintestine_lumen,
"dAintestine" = dAintestine, "dAfeces" = dAfeces,
"dAliver" = dAliver, "dAbile" = dAbile, "dAven_free" = dAven_free,
"dAart_free" = dAart_free),
"Atissue" = Atissue, "Aloss" = Aloss, "Atotal" = Atotal, "Crest" =Crest,
"CVrest" = CVrest,
"CVkidney" = CVkidney, "CPTC" = CPTC,
"Cfil" = Cfil,  "CVliver" = CVliver, "Cart_free" = Cart_free,
"Cart" = Cart,
"Cplasma_ven" = Aven_free/Vven_plasma/Free,
"Cliver" = Aliver /Vliver,
"Ckidneys" = (APTC+ Akidney_blood)/Vkidney,
"Cbrain" = Abrain /Vbrain,
"Cintestine" =  Aintestine /Vintestine,
"Ctestis" = Agonads/Vgonads,
"Cspleen" = Aspleen /Vspleen,
"Cheart" = Aheart /Vheart,
"Clung" = Alung /Vlung,
"Cstomach" = Astomach /Vstomach,
"Ccarcass" = Arest /Vrest,
"Cblood_art" = (Aart_free/Vart_plasma/Free)/(1-0.46) # from plasma to blood by accounting for hematocrit
)
})
}
save.image("model_params.RData")
library(deSolve)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation")
#===============
# Generate predictions
#===============
load("model_params.RData")
# Body weight Kim 2016
BW <- 0.2 #kg
#5mg/kg dose
admin.time <- seq(0.01,27*24.01,24)
dose <- rep(5,28) #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = admin.time,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
sample_time <- seq(0,28*24,0.1)
solution_5 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
pred_comps <- c( "Cblood_art", "Cliver", "Ckidneys","Clung","Cheart",
"Cspleen", "Ctestis", "Cbrain" )
solution_5 <- solution_5[solution_5$time == 28*24,pred_comps]
#20mg/kg dose
dose <- rep(20,28) #mg/kg
admin.dose <- dose * BW #mg
parameters <- create.params( list("BW" = BW  , sex = "M",
"admin.type" = "oral", "admin.time" = admin.time,
"admin.dose" = admin.dose, "fitted_pars" = fitted_pars,
"group" = group, "N_pars" = N_pars ))
events <- create.events(parameters)
solution_20 <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
solution_20 <- solution_20[solution_20$time == 28*24,pred_comps]
##############################
### Load experimental data ###
##############################
# Load the mean values
tissues <- openxlsx::read.xlsx("Raw_Data/Cui_2008/Cui_tissues.xlsx")
tissues_5 <- tissues[tissues$Dose_mg_per_kg == 5,]
tissues_20 <- tissues[tissues$Dose_mg_per_kg == 20,]
# Gather the required data for the x-y plot
results_df_5<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_5$Dose_mg_per_kg,
"Tissue" = tissues_5$Tissue ,
"Type" = "oral",
"Observed" =tissues_5$`Concentration_ug/g`,
"Predicted" = unname(t(solution_5)))
results_df_20<- data.frame("Study" = "Cui_2010", "Dose" =  tissues_20$Dose_mg_per_kg,
"Tissue" = tissues_20$Tissue,
"Type" = "oral",
"Observed" = tissues_20$`Concentration_ug/g`,
"Predicted" = unname(t(solution_20)))
results_df <- rbind(results_df_5, results_df_20)
write.csv(results_df,
"/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation/Validation_results/Cui_2008_results.csv",
row.names =F)
results_df
