axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
)
print(scatter_plot)
ggsave("validation_plot_PFOA.png", scatter_plot, width = 11, height = 7, units = "in", dpi = 300)
Cui_results
Cui_results <- read.csv("Cui_2008_results.csv", header = T)
library(ggplot2)
setwd("/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA/Validation/Validation_results")
column_names <- c("Study",	"Dose",	"Tissue",	"Type",	"Observed",	"Predicted")
# Load Results
Cui_results <- read.csv("Cui_2008_results.csv", header = T)
Cui_low <- Cui_results[Cui_results$Dose == 5, ]
Cui_low$Experiment <- "Cui | 5mg/kg | oral"
Cui_high <- Cui_results[Cui_results$Dose == 20, ]
Cui_high$Experiment <- "Cui | 20mg/kg | oral"
Kudo_results <- read.csv("Kudo_results.csv", header = T)
Kudo_low <- Kudo_results[Kudo_results$Dose == 0.041, ]
Kudo_low$Experiment <-  "Kudo | 0.04mg/kg | iv"
Kudo_high <- Kudo_results[Kudo_results$Dose == 16.560, ]
Kudo_high$Experiment <-  "Kudo | 16mg/kg | iv"
Kim_results <- read.csv("Kim_results.csv", header = T)
Kim_iv <- Kim_results[Kim_results$Type == "iv",]
Kim_iv$Experiment <-  "Kim | 1mg/kg | iv"
Kim_oral <- Kim_results[Kim_results$Type == "oral",]
Kim_oral$Experiment <-  "Kim | 1mg/kg | oral"
Tissue_markers <-  c(0:10,14)
names(Tissue_markers) <- c( "Lung",   "Spleen",  "Liver",   "Kidney", "Plasma", "Heart",
"Brain","Testis", "Stomach", "Intestines", "Carcass")
Experiment <- scales::hue_pal()(6)
Experiment <- c("#009E73", "#E69F00", "#56B4E9", "#CC79A7", "#000000", "#D55E00")
names(Experiment) <- unique(c(Cui_low$Experiment, Cui_high$Experiment,
Kudo_low$Experiment,   Kudo_high$Experiment,
Kim_iv$Experiment, Kim_oral$Experiment))
scatter_plot <- ggplot()+
geom_abline(intercept = log10(1), slope = 1, linetype = "dashed", color = "black", linewidth = 1.5,alpha = 0.7) +  # Identity line in log10 scale
geom_point(data = Cui_low, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Cui_high, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kudo_low, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kudo_high, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kim_iv, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
geom_point(data = Kim_oral, aes(x=Observed, y=Predicted, color = Experiment, shape = Tissue), size=4, stroke = 1.5)+
scale_y_log10()+
scale_x_log10()+
scale_color_manual(values = Experiment)+
theme(legend.spacing.y = unit(1, 'cm')) +
guides(fill = guide_legend(byrow = TRUE))+
scale_shape_manual(values = Tissue_markers)+
theme_light()+
labs(y = "Predicted PFOA (mg/L tissue)",
x = "Observed PFOA ( mg/L tissue)")+
theme(plot.title = element_text(hjust = 0.5),
legend.key.size = unit(0.75, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=12,  hjust = 0),
axis.text = element_text(size = 14),
axis.title = element_text(size = 14),
)
print(scatter_plot)
ggsave("validation_plot_PFOA.png", scatter_plot, width = 11, height = 7, units = "in", dpi = 300)
group
exp(fitted_pars)
0.09*0.88
library(deSolve)
library(ggplot2)
setwd("C:/Users/ptsir/Documents/GitHub/PBK_Grouping/PFOA")
#=========================
#1. Parameters of the model
#=========================
create.params  <- function(user_input){
with( as.list(user_input),{
sex <-  "M" #code only for male rats
# User input: BW(kg), sex(F/M)
#Physiological Parameters
MKC = 0.0073	#fraction mass of kidney (percent of BW); Brown 1997
MLC = 0.0366	#fraction mass of liver (percent of BW); Brown 1997
#Cardiac Output and Bloodflow (as fraction of cardiac output)
QCC = 14.0 #cardiac output in L/h/kg^0.75; Brown 1997
QL_hepatic_arteryC = 0.021 #fraction blood flow to liver; Brown 1997
QkidneyC = 0.141 #fraction blood flow to kidney; Brown 1997.
QgonadsC = 0.500/53  	#fraction blood flow to gonads; from doi:10.1124/dmd.107.015644
QintestineC = 0.451/2.58	#fraction blood flow to intestine; from doi:10.1007/bf02353860
QspleenC = 0.63/74	#fraction blood flow to spleen; davies 1993
QheartC = 0.051	#fraction blood flow to heart; Brown 1997
QlungC = 	1#fraction blood flow to lung; Brown 1997
QbrainC = 0.02	#fraction blood flow to brain; Brown 1997
QstomachC = 0.068 /2.58	#fraction blood flow to stomach; from doi:10.1007/bf02353860
Htc = 0.46 #hematocrit for the rat; Davies 1993
#Tissue Volumes
VplasC = 0.0312 #fraction vol. of plasma (L/kg BW); Davies 1993
VliverC = 0.0366 #fraction vol. of liver (L/kg BW); Brown 1997
VkidneyC = 0.0073 #fraction vol. of kidney (L/kg BW); Brown 1997
VgonadsC = 2.50/250	#fraction vol. of gonads (L/kg BW); from doi:10.1124/dmd.107.015644
VintestineC = 0.0140+0.0084	#fraction vol. of tointestine (L/kg BW); Brown 1997
VspleenC = 0.0020 #fraction vol. of spleen (L/kg BW); Brown 1997
VheartC = 0.0033	#fraction vol. of heart (L/kg BW); Brown 1997
VlungC = 	0.0050#fraction vol. of lung (L/kg BW); Brown 1997
VbrainC = 0.0057	#fraction vol. of brain (L/kg BW); Brown 1997
VstomachC = 0.0046	#fraction vol. of stomach (L/kg BW); Brown 1997
VfilC = 8.4e-4	#fraction vol. of filtrate (L/kg BW)
VPTCC = 1.35e-4 #vol. of proximal tubule cells (L/g kidney) (60 million PTC cells/gram kidney, 1 PTC = 2250 um3)
#Chemical Specific Parameters
MW = 414.07	#PFOA molecular mass (g/mol)
#Kidney Transport Parameters
Vmax_baso_invitro = 393.45 #Vmax of basolateral transporter (pmol/mg protein/min); averaged in vitro value of rOAT1 and rOAT3 from Nakagawa, 2007
Km_baso = 27.2 #Km of basolateral transporter (mg/L) Average of rOAT1 and rOAT3 from Nakagawa et. al, 2007
Vmax_apical_invitro = 9300 #Vmax of apical transporter (pmol/mg protein/min); invitro value for Oatp1a1 from Weaver, 2010
Km_apical = 52.3#Km of apical transporter (mg/L), in vitro value for Oatp1a1 from Weaver, 2010.
protein = 2.0e-6	#amount of protein in proximal tubule cells (mg protein/proximal tubule cell)
#Partition Coefficients (from rat tissue data, Kudo et al, 2007)
Pliver = 2.2 #liver:blood
Pkidney = 1.05 #kidney:blood
Prest = 0.030/0.254 #rest of body:blood
Pintestine = 0.017/0.254
Pgonads = 0.018/0.254
Pspleen = 0.015/0.254
Pheart = 0.029/0.254
Plung = 0.039/0.254
Pbrain = 0.003/0.254
Pstomach = 0.009/0.254
#rate constants
kdif = 0.001	#diffusion rate from proximal tubule cells (L/h)
kabsc = 2.12	#rate of absorption of chemical from small intestine to liver (1/(h*BW^0.25))(fit to data)
kunabsc = 7.06e-5	#rate of unabsorbed dose to appear in feces (1/(h*BW^0.25))(fit to data)
GEC = 0.54 #gastric emptying time (1/(h*BW^0.25)); from Yang, 2013
k0C = 1.0	#rate of uptake from the stomach into the liver (1/(h*BW^0.25)) (fit to data)
keffluxc = 2.49 #rate of clearance of PFOA from proximal tubule cells into blood (1/(h*BW^0.25))
kbilec = 0.004 #biliary elimination rate ((male); liver to feces storage (1/(h*BW^0.25)) (fit to data)
kurinec = 1.6 #rate of urine elimination from urine storage (male) (1/(h*BW^0.25))(fit to data)
Free = 0.09#0.006 #free fraction in plasma (male)
if(sex == "M"){
GFRC = 62.1	#glomerular filtration rate (L/hr/kg kidney) (male); Corley, 2005
RAFbaso = 4.07	#relative activity factor, basolateral transporters (male) (fit to data)
RAFapi = 35	#relative activity factor, apical transporters (male) (fit to data)
}else if(sex == "F"){
GFRC = 41.04	#glomerular filtration rate (L/hr/kg kidney) (female); Corley, 2005
RAFapi = 0.001356	#relative activity factor, apical transporters (female) (fit to data)
RAFbaso = 0.01356	#relative activity factor, basolateral transporters (female) (fit to data)
}
#Scaled Parameters
#Cardiac output and blood flows
QC <- QCC*(BW^0.75)*(1-Htc)	#cardiac output in L/h; adjusted for plasma
Qlung <- QC
Qkidney <- (QkidneyC*QC)	#plasma flow to kidney (L/h)
QL_hepatic_artery <- (QL_hepatic_arteryC*QC)	#plasma flow to liver (L/h)
Qspleen <- (QspleenC*QC)	#plasma flow to spleen (L/h)
Qgonads <- (QgonadsC*QC)	#plasma flow to gonads (L/h)
Qintestine <- (QintestineC*QC)	#plasma flow to intestine (L/h)
Qstomach <- (QstomachC*QC)	#plasma flow to stomach (L/h)
Qheart <- (QheartC*QC)	#plasma flow to heart (L/h)
Qbrain <- (QbrainC*QC)	#plasma flow to liver (L/h)
Qrest <- QC - Qkidney - QL_hepatic_artery - Qspleen - Qgonads - Qintestine	- Qstomach -
Qheart - Qbrain#plasma flow to rest of body (L/h)
QBal <- QC - (Qkidney + QL_hepatic_artery + Qspleen + Qgonads + Qintestine	+ Qstomach +
Qheart + Qbrain+Qrest) #Balance check of blood flows; should equal zero
#Tissue Volumes
MK = MKC*BW*1000	#mass of the kidney (g)
PTC = MKC*6e7	#number of PTC (cells/kg BW) (based on 60 million PTC/gram kidney)
VPTC = MK*VPTCC	#volume of proximal tubule cells (L)
VPlas = VplasC*BW 	#volume of plasma (L)
V_venous_blood <- BW*11.3/250 	#volume of venous plasma (L); from doi:10.1007/bf02353860
V_arterial_blood <- BW*5.6/250	#volume of arterial plasma (L); from doi:10.1007/bf02353860
V_blood <-   V_venous_blood + V_arterial_blood
Vven_plasma = VPlas*V_venous_blood/V_blood	#volume of venous plasma (L)
Vart_plasma = VPlas*V_arterial_blood/V_blood  	#volume of arterial plasma (L)
Vgonads = VgonadsC*BW 	#volume of gonads (L)
Vspleen = VspleenC*BW 	#volume of spleen (L)
Vheart = VheartC*BW 	#volume of heart (L)
Vstomach = VstomachC*BW 	#volume of stomach (L)
Vintestine = VintestineC*BW 	#volume of intestine (L)
Vlung = VlungC*BW 	#volume of lung (L)
Vbrain = VbrainC*BW 	#volume of brain (L)
Vkidney = VkidneyC*BW 	#volume of kidney (L)
Vliver = VliverC*BW	#volume of liver (L)
Vkidneyb <- Vkidney*0.16	#volume of blood in the kidney (L); fraction blood volume of kidney (0.16) from Brown, 1997
Vbrainb <- Vbrain*0.21	#volume of blood in the brain (L); fraction blood volume of brain (0.21) from Brown, 1997
Vliverb <- Vliver*0.03	#volume of blood in the liver (L); fraction blood volume of liver (0.03) from Brown, 1997
Vfil = VfilC*BW	#volume of filtrate (L)
Vrest = BW - V_venous_blood -V_arterial_blood -Vfil  - Vliver - Vkidney - Vbrain - Vlung-
Vintestine - Vstomach - Vheart - Vspleen -  Vgonads #volume of remaining tissue (L);
VBal = BW - (Vrest + Vliver + VPTC + Vfil + VPlas)	#Balance check of tissue volumes; should equal zero
ML = MLC*BW*1000	#mass of the liver (g)
#Kidney Parameters
MK = MKC*BW*1000	#mass of the kidney (g)
PTC = MKC*6e7	#number of PTC (cells/kg BW) (based on 60 million PTC/gram kidney)
VPTC = MK*VPTCC	#volume of proximal tubule cells (L)
MPTC = VPTC*1000 #mass of the proximal tubule cells (g) (assuming density 1 kg/L)
Vmax_basoC = (Vmax_baso_invitro*RAFbaso*PTC*protein*60*(MW/1e12)*1000)#Vmax of basolateral transporters (mg/h/kg BW)
Vmax_apicalC = (Vmax_apical_invitro*RAFapi*PTC*protein*60*(MW/1e12)*1000) #Vmax of basolateral transporters (mg/h/kg BW)
Vmax_baso = Vmax_basoC*BW^0.75	#(mg/h)
Vmax_apical = Vmax_apicalC*BW^0.75	#(mg/h)
kbile = kbilec*BW^(-0.25)	#biliary elimination; liver to feces storage (/h)
kurine = kurinec*BW^(-0.25)	#urinary elimination, from filtrate (/h)
kefflux = keffluxc*BW^(-0.25)	#efflux clearance rate, from PTC to blood (/h)
GFR = GFRC*(MK/1000)	#glomerular filtration rate, scaled to mass of kidney(in kg)(L/h)
#GI Tract Parameters
kabs = kabsc*BW^(-0.25)	#rate of absorption of chemical from small intestine to liver (/h)
kunabs = kunabsc*BW^(-0.25)	#rate of unabsorbed dose to appear in feces (/h)
GE = GEC/BW^0.25	#gastric emptying time (/h)
k0 = k0C/BW^0.25 	#rate of uptake from the stomach into the liver (/h)
return(list( "QC" = QC, "Qkidney" = Qkidney, "QL_hepatic_artery" = QL_hepatic_artery, "Qrest" = Qrest,
"Qgonads" = Qgonads, "Qstomach" = Qstomach, "Qintestine" = Qintestine,
"Qbrain" = Qbrain, "Qlung" = Qlung,  "Qheart" = Qheart,
"Qspleen" = Qspleen,
"VPlas" = VPlas, "Vart_plasma" = Vart_plasma, "Vven_plasma" = Vven_plasma,
"Vkidneyb" = Vkidneyb, "Vfil" = Vfil, "Vliver" = Vliver, "Vrest" = Vrest,
"Vgonads" = Vgonads, "Vstomach" = Vstomach, "Vintestine" = Vintestine,
"Vbrain" = Vbrain, "Vlung" = Vlung,  "Vheart" = Vheart,
"Vspleen" = Vspleen, "Vkidney" = Vkidney,"Vbrainb" = Vbrainb,
"Vliverb" = Vliverb,
"GFR" = GFR, "VPTC" = VPTC,"Km_baso" = Km_baso, "Km_apical" = Km_apical,
"kbile" = kbile, "kurine" = kurine,
"kunabs" = kunabs, "GE" = GE,"Km_baso" = Km_baso,
"Pliver" = Pliver*0.384,  "Pbrain" = Pbrain* 1.13,
"Free" = Free*0.882,
"Vmax_apical" = Vmax_apical*1.489,  "kabs" = kabs*0.40,
"Prest" = Prest,
"Pgonads" = Pgonads,
"Pspleen" = Pspleen, "Pheart" = Pheart,
"Plung" = Plung,  "Pstomach" =Pstomach,
"Pintestine" = Pintestine,
"k0" = k0*0.40,
"kefflux" = kefflux*1.489,'kdif' = kdif*1.489,
"Vmax_baso" = Vmax_baso*0.40,
"admin.type" = admin.type,
"admin.time" = admin.time, "admin.dose" = admin.dose))  })
}
#===============================================
#2. Function to create initial values for ODEs
#===============================================
create.inits <- function(parameters){
with( as.list(parameters),{
"Arest" <- 0; "Adif" <- 0; "A_baso" <- 0; "Akidney_blood" <- 0;
"ACl" <- 0; "Aefflux" <- 0;
"A_apical" <- 0; "APTC" <- 0; "Afil" <- 0;
"Aurine" <- 0; "Astomach_lumen" <- 0;
"Astomach" <- 0; "Aintestine_lumen" <- 0; "Aintestine" <- 0; "Afeces" <- 0;
"Aliver" <- 0; "Abile" <- 0;
"Agonads" <- 0; "Aspleen" <- 0; "Aheart" <- 0;
"Alung" <- 0; "Abrain" <- 0; "Aven_free" <- 0; "Aart_free" <- 0;
return(c("Arest" = Arest, "Agonads" = Agonads, "Aspleen" = Aspleen, "Aheart" = Aheart,
"Alung" = Alung, "Abrain" = Abrain, "Adif" = Adif, "A_baso" = A_baso,
"Akidney_blood" = Akidney_blood,
"ACl" = ACl, "Aefflux" = Aefflux,
"A_apical" = A_apical, "APTC" = APTC, "Afil" = Afil,
"Aurine" = Aurine, "Astomach_lumen" =Astomach_lumen,
"Astomach" = Astomach, "Aintestine_lumen" = Aintestine_lumen, "Aintestine" = Aintestine,
"Afeces" = Afeces,
"Aliver" = Aliver, "Abile" = Abile, "Aven_free" = Aven_free, "Aart_free" = Aart_free))
})
}
#===================
#3. Events function
#===================
create.events <- function(parameters){
with(as.list(parameters), {
# Calculate number of administrated doses and corresponding administration time
ldose <- length(admin.dose)
ltimes <- length(admin.time)
# If not equal, then stop
if (ltimes != ldose){
stop("The times of administration should be equal in number to the doses")
}else{
if (admin.type == "iv"){
events <- list(data = rbind(data.frame(var = c("Aven_free"),  time = admin.time,
value = admin.dose, method = c("add")) ))
}else if (admin.type == "oral"){
events <- list(data = rbind(data.frame(var = c("Astomach_lumen"),  time = admin.time,
value = c( admin.dose), method = c("add")) ))
}else{
stop("The type of administration should be either iv or oral")
}
}
return(events)
})
}
#==================
#4. Custom function
#==================
custom.func <- function(){
return()
}
#==============
#5. ODEs System
#==============
ode.func <- function(time, inits, params, custom.func){
with(as.list(c(inits,params)),{
Crest = Arest/Vrest #concentration in rest of body (mg/L)
CVrest = Crest/Prest	#concentration in venous blood leaving the rest of the body (mg/L)
Ckidney_blood = Akidney_blood/Vkidneyb	#concentration in kidney blodd (mg/L)
CVkidney = Ckidney_blood #/Pkidney	#concentration in venous blood leaving kidney (mg/L)
CPTC = APTC/VPTC	#concentration in PTC (mg/L)
Cfil = Afil/Vfil	#concentration in filtrate (mg/L)
Cliver = Aliver/Vliver	#concentration in the liver (mg/L)
CVliver = Cliver/Pliver	#concentration in the venous blood leaving the liver (mg/L)
Cgonads = Agonads/Vgonads	#concentration in the gonads (mg/L)
CVgonads = Cgonads/Pgonads	#concentration in the venous blood leaving the gonads (mg/L)
Cspleen = Aspleen/Vspleen	#concentration in the spleen (mg/L)
CVspleen = Cspleen/Pspleen	#concentration in the venous blood leaving the spleen (mg/L)
Cheart = Aheart/Vheart	#concentration in the heart (mg/L)
CVheart = Cheart/Pheart	#concentration in the venous blood leaving the heart (mg/L)
Clung = Alung/Vlung	#concentration in the lung (mg/L)
CVlung = Clung/Plung	#concentration in the venous blood leaving the lung (mg/L)
Cbrain = Abrain/Vbrain	#concentration in the brain (mg/L)
CVbrain = Cbrain/Pbrain	#concentration in the venous blood leaving the brain (mg/L)
Cintestine = Aintestine/Vintestine	#concentration in the liver (mg/L)
CVintestine = Cintestine/Pintestine	#concentration in the venous blood leaving the liver (mg/L)
Cstomach = Astomach/Vstomach	#concentration in the liver (mg/L)
CVstomach = Cstomach/Pstomach	#concentration in the venous blood leaving the liver (mg/L)
Cart_free = Aart_free/Vart_plasma		#concentration in arterial  plasma (mg)
Cart = Cart_free/Free	#concentration of total PFOA in arterial plasma (mg/L)
Cven_free = Aven_free/Vven_plasma		#concentration in venous plasma (mg)
Cven = Cven_free/Free	#concentration of total PFOA in venous plasma (mg/L)
# Rest of Body (Tis)
dArest = Qrest*(Cart-CVrest)*Free	#rate of change in rest of body (mg/h)
dAgonads = Qgonads*(Cart-CVgonads)*Free	#rate of change in rest of body (mg/h)
dAspleen = Qspleen*(Cart-CVspleen)*Free	#rate of change in rest of body (mg/h)
dAheart = Qheart*(Cart-CVheart)*Free	#rate of change in rest of body (mg/h)
dAlung = Qlung*(Cven-CVlung)*Free	#rate of change in rest of body (mg/h)
dAbrain = Qbrain*(Cart-CVbrain)*Free	#rate of change in rest of body (mg/h)
#Kidney
#Kidney Blood (Kb)
dAdif <- kdif*(Ckidney_blood - CPTC)	#rate of diffusion from into the PTC (mg/hr)
dA_baso <- (Vmax_baso*Ckidney_blood)/(Km_baso + Ckidney_blood)
dAkidney_blood <- Qkidney*(Cart-CVkidney)*Free - Cart*GFR*Free- dAdif - dA_baso  #rate of change in kidney blood (mg/h).
dACl <- Cven*GFR*Free	#rate of clearance via glormerular filtration (mg/h)
#Proximal Tubule Cells (PTC)
dAefflux <- kefflux*APTC
dA_apical <- (Vmax_apical*Cfil)/(Km_apical + Cfil)
dAPTC <-  dAdif + dA_apical + dA_baso - dAefflux #rate of change in PTC(mg/h)
#Filtrate (Fil)
dAfil = Cart*GFR*Free - dA_apical - Afil*kurine	#rate of change in filtrate (mg/h)
#Urinary elimination
dAurine = kurine*Afil	#rate of change in urine (mg/h)
#GI Tract (Absorption site of oral dose)
#Stomach
dAstomach_lumen=  - k0*Astomach_lumen - GE*Astomach_lumen 	#rate of change in the stomach lumen (mg/h)
dAstomach = k0*Astomach_lumen + Qstomach*(Cart-CVstomach)*Free	#rate change in the stomach (mg/h)
#Small Intestine
dAintestine_lumen = GE*Astomach_lumen - kabs*Aintestine_lumen - kunabs*Aintestine_lumen	#rate of change in the  intestine lumen (mg/hr)
dAintestine = kabs*Aintestine_lumen +  Qintestine*(Cart-CVintestine)*Free	#rate change in the  intestine (mg/hr)
#Feces compartment
dAfeces = kbile*Aliver + kunabs*Aintestine_lumen #rate of change in the feces compartment (mg/h)
#Liver
dAliver = QL_hepatic_artery*Cart*Free - kbile*Aliver+
Qspleen*CVspleen*Free +Qstomach*CVstomach*Free+ Qintestine*CVintestine*Free-
(QL_hepatic_artery+Qspleen+Qstomach+Qintestine)*CVliver*Free#rate of change in the liver (mg/h)
dAbile = kbile*Aliver
#Venous Plasma compartment
dAven_free = Qrest*CVrest*Free + Qgonads*CVgonads*Free +  Qheart*CVheart*Free + Qbrain*CVbrain*Free +
(Qkidney*CVkidney*Free) + ((QL_hepatic_artery+Qspleen+Qstomach+Qintestine) *CVliver*Free) -
(Qlung*Cven*Free) #rate of change in the plasma (mg/h)
#Arterial Plasma compartment
dAart_free =  Qlung*CVlung*Free - Cart*Free*(Qrest+Qgonads+Qspleen+Qheart+
Qbrain+Qkidney+Qstomach+Qintestine+QL_hepatic_artery)+ dAefflux
#Mass Balance Check
Atissue = Aart_free +Aven_free+ Arest + Akidney_blood + Afil + APTC + Aliver +
Astomach + Astomach_lumen + Aintestine+ Aintestine_lumen+
Agonads + Aspleen + Aheart + Alung + Abrain #sum of mass in all compartments (mg)
Aloss = Aurine + Afeces #sum of mass lost through urinary and fecal excretion (mg)
Atotal = Atissue + Aloss 	#total mass; should equal total dose
list(c("dArest" = dArest, "dAgonads" = dAgonads, "dAspleen" = dAspleen, "dAheart" = dAheart,
"dAlung" = dAlung, "dAbrain" = dAbrain,
"dAdif" = dAdif, "dA_baso" = dA_baso, "dAkidney_blood" = dAkidney_blood,
"dACl" = dACl, "dAefflux" = dAefflux,
"dA_apical" = dA_apical, "dAPTC" = dAPTC, "dAfil" = dAfil,
"dAurine" = dAurine, "dAstomach_lumen" =dAstomach_lumen,
"dAstomach" = dAstomach, "dAintestine_lumen" = dAintestine_lumen,
"dAintestine" = dAintestine, "dAfeces" = dAfeces,
"dAliver" = dAliver, "dAbile" = dAbile, "dAven_free" = dAven_free,
"dAart_free" = dAart_free),
"Atissue" = Atissue, "Aloss" = Aloss, "Atotal" = Atotal, "Crest" =Crest,
"CVrest" = CVrest,
"CVkidney" = CVkidney, "CPTC" = CPTC,
"Cfil" = Cfil, "CVliver" = CVliver, "Cart_free" = Cart_free,
"Cart" = Cart,
"Cplasma_ven" = Aven_free/Vven_plasma/Free,
"Cplasma_art" = Aart_free/Vart_plasma/Free,
"Cliver" = Aliver /Vliver,
"Ckidneys" = (APTC+ Akidney_blood)/Vkidney,
"Cbrain" = Abrain /Vbrain,
"Cintestine" = Aintestine /Vintestine,
"Ctestis" = Agonads/Vgonads,
"Cspleen" = Aspleen /Vspleen,
"Cheart" = Aheart /Vheart,
"Clung" = Alung /Vlung,
"Cstomach" = Astomach /Vstomach,
"Ccarcass" = Arest /Vrest,
"Cblood_art" = (Aart_free/Vart_plasma/Free)/2 # from plasma to blood based on kudo et al. (2007)
)
})
}
#===============
# Create input
#===============
BW <- 0.2#kg
admin.type <- "b" #iv or oral
admin.dose <- 5 # mg
user_input <-list("BW" = BW  ,
"admin.type" = admin.type,
"admin.time" = 0.01, "admin.dose" = admin.dose)
predicted.feats <- c( "Cplasma_ven","Cplasma_art" ,"Cliver", "Ckidneys",
"Cbrain","Cintestine","Ctestis","Cspleen","Cheart","Clung", "Cstomach","Ccarcass")
parameters <- create.params( list("BW" = BW  ,
"admin.type" = admin.type,
"admin.time" = 0.01, "admin.dose" = admin.dose))
inits <- create.inits(parameters)
events <- create.events(parameters)
sample_time <- 0:100
test <- deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7)
BW <- 0.2#kg
admin.type <- "iv" #iv or oral
admin.dose <- 5 # mg
user_input <-list("BW" = BW  ,
"admin.type" = admin.type,
"admin.time" = 0.01, "admin.dose" = admin.dose)
predicted.feats <- c( "Cplasma_ven","Cplasma_art" ,"Cliver", "Ckidneys",
"Cbrain","Cintestine","Ctestis","Cspleen","Cheart","Clung", "Cstomach","Ccarcass")
parameters <- create.params( list("BW" = BW  ,
"admin.type" = admin.type,
"admin.time" = 0.01, "admin.dose" = admin.dose))
inits <- create.inits(parameters)
events <- create.events(parameters)
sample_time <- 0:100
test <- deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7)
jaqpotr::login.cr
test
events <- create.events(parameters)
sample_time <- seq(0,5,0.01)
test <- deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7)
test
user_input <-list("BW" = BW  ,
"admin.type" = admin.type,
"admin.time" = 0.0001, "admin.dose" = admin.dose)
predicted.feats <- c( "Cplasma_ven","Cplasma_art" ,"Cliver", "Ckidneys",
"Cbrain","Cintestine","Ctestis","Cspleen","Cheart","Clung", "Cstomach","Ccarcass")
parameters <- create.params( list("BW" = BW  ,
"admin.type" = admin.type,
"admin.time" = 0.01, "admin.dose" = admin.dose))
inits <- create.inits(parameters)
events <- create.events(parameters)
sample_time <- seq(0,5,0.01)
test <- deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7)
test
BW <- 0.2#kg
admin.type <- "iv" #iv or oral
admin.dose <- 5 # mg
user_input <-list("BW" = BW  ,
"admin.type" = admin.type,
"admin.time" = 0.0001, "admin.dose" = admin.dose)
predicted.feats <- c( "Cplasma_ven","Cplasma_art" ,"Cliver", "Ckidneys",
"Cbrain","Cintestine","Ctestis","Cspleen","Cheart","Clung", "Cstomach","Ccarcass")
parameters <- create.params( list("BW" = BW  ,
"admin.type" = admin.type,
"admin.time" = 0.01, "admin.dose" = admin.dose))
inits <- create.inits(parameters)
events <- create.events(parameters)
sample_time <- seq(0,1,0.001)
test <- deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7)
test
jaqpotr::login.cred()
jaqpotr::deploy.pbpk(user.input = user_input,out.vars = predicted.feats, create.params = create.params,
create.inits = create.inits, create.events = create.events, custom.func = custom.func,
ode.fun = ode.fun)
admin.dose <- 1# mg
user_input <-list("BW" = BW  ,
"admin.type" = admin.type,
"admin.time" = 0.0001, "admin.dose" = admin.dose)
predicted.feats <- c( "Cplasma_ven","Cplasma_art" ,"Cliver", "Ckidneys",
"Cbrain","Cintestine","Ctestis","Cspleen","Cheart","Clung", "Cstomach","Ccarcass")
parameters <- create.params( list("BW" = BW  ,
"admin.type" = admin.type,
"admin.time" = 0.01, "admin.dose" = admin.dose))
inits <- create.inits(parameters)
events <- create.events(parameters)
sample_time <- 0:10
test <- deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7)
test
test <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
test$Cplasma_ven
BW <- 0.2#kg
admin.type <- "oral" #iv or oral
admin.dose <- 1# mg
user_input <-list("BW" = BW  ,
"admin.type" = admin.type,
"admin.time" = 0.0001, "admin.dose" = admin.dose)
predicted.feats <- c( "Cplasma_ven","Cplasma_art" ,"Cliver", "Ckidneys",
"Cbrain","Cintestine","Ctestis","Cspleen","Cheart","Clung", "Cstomach","Ccarcass")
parameters <- create.params( list("BW" = BW  ,
"admin.type" = admin.type,
"admin.time" = 0.01, "admin.dose" = admin.dose))
inits <- create.inits(parameters)
events <- create.events(parameters)
sample_time <- 0:10
test <- data.frame(deSolve::ode(times = sample_time,  func = ode.func,
y = inits, parms = parameters, events = events,
method="lsodes",rtol = 1e-7, atol = 1e-7))
test$Cplasma_ven
